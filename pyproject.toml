[project]
name = "pyhaopenmotics"
version = "0.0.7"
description = "Asynchronous Python client for the OpenMotics API."
authors = [{ name = "Wouter Coppens", email = "wouter.coppens@gmail.com"}]
maintainers = [{ name = "Wouter Coppens", email = "wouter.coppens@gmail.com"}]
license = { text = "AGPLv3" }
readme = "README.md"
keywords = ["openmotics", "api", "async", "client", "homeassistant"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Framework :: AsyncIO",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

requires-python = ">=3.13"
dependencies = [
  "aiohttp>=3.0.0",
  "async_timeout>=4.0.0",
  "backoff>=2.2.1",
  "yarl>=1.9.0",
  "mashumaro>=3.10",
  "orjson>=3.9.8",
  "websockets>=11.0.1",
  "yarl>=1.6.0",
]

[project.optional-dependencies]
cli = [
  "authlib>=1.4.0",
  "httpx>=0.28.1",
  "python-dotenv>=1.0.1",
]

# packages = [
#     { include = "pyhaopenmotics", from = "src" },
# ]

[project.urls]
Changelog = "https://github.com/rensongroup/pyhaopenmotics/releases"
Repository = "https://github.com/rensongroup/pyhaopenmotics"
Issues = "https://github.com/rensongroup/pyhaopenmotics/issues"

[tool.bandit]
exclude_dirs = ["tests"]

[tool.codespell]
write-changes = true

[tool.coverage.run]
plugins = ["covdefaults"]
source = ["pyhaopenmotics"]

[tool.coverage.report]
fail_under = 50
show_missing = true

[tool.mypy]
python_version = "3.13"
color_output = true
error_summary = true

disable_error_code = ['arg-type','return-value','misc', 'no-any-return']

[tool.pylint]
max-line-length = 120

messages_control.disable = [
# Reasons disabled:
# format - handled by ruff
  "format",
# line-too-long - handled by ruff
  "line-too-long",
# duplicate-code - unavoidable
  "duplicate-code",
# used-before-assignment - false positives with TYPE_CHECKING structures
  "used-before-assignment",

  "abstract-method",
  "import-error",
  "too-many-positional-arguments",
  "fixme",
  "too-many-instance-attributes",
  "too-many-arguments",
  "unreachable" #only in src/pyhaopenmotics/openmoticsgw/thermostats.py
]
ignore-paths = [
  "examples",
  "tests",
  "src/pyhaopenmotics/client/websocket.py" # To be fixed one day
]


[tool.pytest.ini_options]
addopts = "--cov"
asyncio_mode = "auto"

[tool.ruff]
# Allow lines to be as long as 120.
line-length = 125

[tool.ruff.lint]
ignore = [
  "ANN401", # Opinioated warning on disallowing dynamically typed expressions
  "D203", # Conflicts with other rules
  "D213", # Conflicts with other rules
  "D417", # False positives in some occasions
  "PLR2004", # Just annoying, not really useful

  # Conflicts with the Ruff formatter
  "COM812",
  "ISC001",

  # To fix some day
  "ERA001", # Found commented-out code
  "FIX001",
  "FIX002",
  "TD003",
  "ARG002"
]
select = ["ALL"]

[tool.ruff.lint.pylint]
max-args = 10

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
known-first-party = ["pyhaopenmotics"]

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = [
  "mashumaro.mixins.orjson.DataClassORJSONMixin",
]

[tool.ruff.lint.mccabe]
max-complexity = 25

[tool.ruff.lint.per-file-ignores]
"examples/*.py" = ["ALL"]
"src/pyhaopenmotics/client/websocket.py" = ["ALL"]
"src/pyhaopenmotics/client/openmoticscloud.py" = ["ERA001"] # Websockets code
"src/pyhaopenmotics/client/localgateway.py" = ["ERA001"] # Websockets code
# "src/pyhaopenmotics/cloud/models/*.py" = ["TCH002", "TCH003"]


[tool.pyright]
venvPath = "."
venv = ".venv"
exclude = ["examples","tests"]

reportArgumentType = false
reportCallIssue = false


[tool.uv]
prerelease = "allow"
dev-dependencies = [
  "aresponses==3.0.0",
  "codespell==2.4.0",
  "covdefaults==2.3.0",
  "coverage[toml]==7.6.10",
  "mypy==1.14.1",
  "pre-commit==4.1.0",
  "pre-commit-hooks==5.0.0",
  "pylint==3.3.3",
  "pytest==8.3.4",
  "pytest-asyncio==0.25.2",
  "pytest-cov==6.0.0",
  "ruff==0.9.3",
  # syrupy==4.8.1",
  "yamllint==1.35.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
